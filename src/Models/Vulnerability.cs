using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;

namespace TrueSecProject.Models;

public enum StixType
{
    [JsonStringEnumMemberName("vulnerability")]
    Vulnerability
}

public class Vulnerability
{
    [JsonPropertyName("type")]
    [JsonConverter(typeof(JsonStringEnumConverter))]
    [Required]
    public StixType Type => StixType.Vulnerability;


    [JsonPropertyName("id")]
    [Required]
    [RegularExpression("^vulnerability--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$")]
    public string Id { get; }

    [JsonPropertyName("name")]
    [Required]
    public string Name { get; }

    [JsonPropertyName("description")]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public string? Description { get; }

    [JsonPropertyName("spec_version")]
    [JsonConverter(typeof(JsonStringEnumConverter))]
    [Required]
    public SpecVersion SpecVersion { get; }

    [JsonPropertyName("created_by_ref")]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [RegularExpression("^identity--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$")]
    public string? CreatedByRef { get; }

    [JsonPropertyName("labels")]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [MinLength(1)]
    public IReadOnlyList<string>? Labels { get; }

    [JsonPropertyName("created")]
    [Required]
    // Slighlty modified to match the C# DateTime format
    [RegularExpression("^[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|59)(\\.[0-9]+)?Z")]
    public string Created { get; }

    [JsonPropertyName("modified")]
    [Required]
    // Slighlty modified to match the C# DateTime format
    [RegularExpression("^[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|59)(\\.[0-9]+)?Z$")]
    public string Modified { get; }

    [JsonPropertyName("revoked")]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public bool? Revoked { get; }

    [Range(0, 100)]
    [JsonPropertyName("confidence")]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public int? Confidence { get; }

    [JsonPropertyName("lang")]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [RegularExpression("^([a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){0,2})?(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-([a-zA-Z0-9]{5,8}|[0-9][a-zA-Z0-9]{3}))*([0-9A-WY-Za-wy-z](-[a-zA-Z0-9]{2,8}){1,})*(x-[a-zA-Z0-9]{2,8})?)|(x-[a-zA-Z0-9]{2,8})|(en-GB-oed)|(i-ami)|(i-bnn)|(i-default)|(i-enochian)|(i-hak)|(i-klingon)|(i-lux)|(i-mingo)|(i-navajo)|(i-pwn)|(i-tao)|(i-tay)|(i-tsu)|(sgn-BE-FR)|(sgn-BE-NL)|(sgn-CH-DE)|(art-lojban)|(cel-gaulish)|(no-bok)|(no-nyn)|(zh-guoyu)|(zh-hakka)|(zh-min)|(zh-min-nan)|(zh-xiang)$")]
    public string? Lang { get; }

    [JsonPropertyName("external_references")]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [MinLength(1)]
    public IReadOnlyList<ExternalReference>? ExternalReferences { get; }

    [JsonPropertyName("object_marking_refs")]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [MinLength(1)]
    public IReadOnlyList<MarkingDefinition>? ObjectMarkingRefs { get; }

    [JsonPropertyName("granular_markings")]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [MinLength(1)]
    public IReadOnlyList<GranularMarking>? GranularMarkings { get; }

    [JsonConstructor]
    public Vulnerability(
        string id,
        string name,
        string created,
        string modified,
        SpecVersion specVersion,
        string? description = null,
        string? createdByRef = null,
        IReadOnlyList<string>? labels = null,
        bool? revoked = null,
        int? confidence = null,
        string? lang = null,
        IReadOnlyList<ExternalReference>? externalReferences = null,
        IReadOnlyList<MarkingDefinition>? objectMarkingRefs = null,
        IReadOnlyList<GranularMarking>? granularMarkings = null
    )
    {
        Id = id;
        Name = name;
        Description = description;
        SpecVersion = specVersion;
        CreatedByRef = createdByRef;
        Labels = labels;
        Created = created;
        Modified = modified;
        Revoked = revoked;
        Confidence = confidence;
        Lang = lang;
        ExternalReferences = externalReferences;
        ObjectMarkingRefs = objectMarkingRefs;
        GranularMarkings = granularMarkings;
    }
}

public enum SpecVersion
{
    [JsonStringEnumMemberName("2.1")]
    V2_1
}

